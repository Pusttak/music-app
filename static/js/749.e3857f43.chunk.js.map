{"version":3,"file":"static/js/749.e3857f43.chunk.js","mappings":"0MACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAyF,4BAAzF,EAAgI,4BAAhI,EAAoK,yBAApK,EAAwM,4B,UC6CxM,EArCkB,SAAC,GAA2E,IAAD,MAAxEA,MAAcC,EAA0D,EAA/DC,IAAcC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,QAAWC,EAAa,EAAbA,OACxEC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAiBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC7BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAO,OAAGT,QAAH,IAAGA,GAAH,UAAGA,EAAU,UAAb,aAAG,EAAcU,OAa9B,OACE,iBAAKC,UAAWC,EAAhB,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAalB,GAAWgB,UAAWC,EAA3C,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKE,IAAG,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAQgB,SAAUC,IAAKlB,OAEnC,cAAGa,UAAWC,EAAd,SAAwBf,QAE1B,gBAAKc,UAAWC,EAAYK,QAAS,kBAnBX,SAAAtB,GACxBA,IAAYU,EAIZV,IAAYU,GACdJ,IAJAM,GAASW,EAAAA,EAAAA,IAAavB,IAiBqBwB,CAAsBxB,IAAjE,SACGO,GAAaP,IAAYU,GAAiB,SAAC,KAAD,CAAWe,KAAM,MAAS,SAAC,KAAD,CAAUA,KAAM,QAGvF,SAAC,KAAD,CAAMP,GAAE,mBAAcJ,GAAtB,UACE,cAAGE,UAAWC,EAAd,SAA2Bd,W,kECvCnC,GAAgB,KAAO,0B,UCcvB,EAZmB,SAAC,GAA0B,IAAxBuB,EAAuB,EAAvBA,SAAUpB,EAAa,EAAbA,OAC9B,OACE,eAAIU,UAAWC,EAAAA,KAAf,SACGS,EAASC,KAAI,WAAYC,GAAZ,IAAG7B,EAAH,EAAGA,MAAH,OACZ,eAAciB,UAAWC,EAAAA,KAAzB,UACE,SAACY,EAAA,EAAD,CAAW9B,MAAOA,EAAOO,OAAQA,KAD1BsB,U,2FCejB,UAfmB,WACjB,IAAQE,GAAeC,EAAAA,EAAAA,MAAfD,WACAE,GAASC,EAAAA,EAAAA,MAATD,KACR,GAA4CE,EAAAA,EAAAA,IAAoBJ,EAAY,CAC1EK,MAAOL,IADDM,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,UAK9B,OAFAC,EAAAA,EAAAA,IAASF,IAEDD,GAAWE,GACjB,SAAC,KAAD,CAAWd,KAAM,IAAKgB,MAAO,CAAEC,OAAQ,YAEvCN,IAAQ,SAAC,IAAD,CAAY9B,OAAQ0B,EAAMN,SAAUU,EAAKO,OAAOC","sources":["webpack://music-app/./src/components/TrackCard/TrackCard.module.scss?1c8b","components/TrackCard/TrackCard.jsx","webpack://music-app/./src/components/TracksList/TracksList.module.scss?c4cc","components/TracksList/TracksList.jsx","pages/ArtistPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"TrackCard_card__u0rZs\",\"link\":\"TrackCard_link__HD5bn\",\"playIcon\":\"TrackCard_playIcon__W+6pF\",\"coverart\":\"TrackCard_coverart__8QKKx\",\"title\":\"TrackCard_title__PC7to\",\"subtitle\":\"TrackCard_subtitle__safku\"};","import { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { currentTrack } from 'redux/music/music-slice';\nimport { currentTrackSelector } from 'redux/music/music-selectors';\nimport { isPlayingSelector } from 'redux/player/player-selectors';\nimport { PlayIcon, PauseIcon } from 'icons';\nimport s from './TrackCard.module.scss';\n\nconst TrackCard = ({ track: { key: trackId, title, subtitle, images, artists }, onPlay }) => {\n  const isPlaying = useSelector(isPlayingSelector);\n  const currentTrackId = useSelector(currentTrackSelector);\n  const dispatch = useDispatch();\n\n  const aristId = artists?.[0]?.adamid;\n\n  const handleButtonPlayClick = trackId => {\n    if (trackId !== currentTrackId) {\n      dispatch(currentTrack(trackId));\n      return;\n    }\n    if (trackId === currentTrackId) {\n      onPlay();\n      return;\n    }\n  };\n\n  return (\n    <div className={s.card}>\n      <Link to={`/tracks/${trackId}`} className={s.link}>\n        <div className={s.coverart}>\n          <img src={images?.coverart} alt={subtitle} />\n        </div>\n        <p className={s.title}>{title}</p>\n      </Link>\n      <div className={s.playIcon} onClick={() => handleButtonPlayClick(trackId)}>\n        {isPlaying && trackId === currentTrackId ? <PauseIcon size={16} /> : <PlayIcon size={16} />}\n      </div>\n\n      <Link to={`/artists/${aristId}`}>\n        <p className={s.subtitle}>{subtitle}</p>\n      </Link>\n    </div>\n  );\n};\n\nexport default TrackCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TracksList_list__NHnsU\"};","import TrackCard from 'components/TrackCard';\nimport s from './TracksList.module.scss';\n\nconst TracksList = ({ dataList, onPlay }) => {\n  return (\n    <ul className={s.list}>\n      {dataList.map(({ track }, idx) => (\n        <li key={idx} className={s.item}>\n          <TrackCard track={track} onPlay={onPlay} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TracksList;\n","import { useParams, useOutletContext } from 'react-router-dom';\n\nimport { useSearchMusicQuery } from 'redux/music/services/audio-api';\nimport { Astronaut } from 'components/Loader';\nimport { useError } from 'hooks';\nimport TracksList from 'components/TracksList';\n\nconst ArtistPage = () => {\n  const { artistName } = useParams();\n  const { play } = useOutletContext();\n  const { data, isError, error, isLoading } = useSearchMusicQuery(artistName, {\n    skip: !artistName,\n  });\n  useError(error);\n\n  return !isError && isLoading ? (\n    <Astronaut size={350} style={{ margin: '0 auto' }} />\n  ) : (\n    data && <TracksList onPlay={play} dataList={data.tracks.hits} />\n  );\n};\n\nexport default ArtistPage;\n"],"names":["track","trackId","key","title","subtitle","images","artists","onPlay","isPlaying","useSelector","isPlayingSelector","currentTrackId","currentTrackSelector","dispatch","useDispatch","aristId","adamid","className","s","to","src","coverart","alt","onClick","currentTrack","handleButtonPlayClick","size","dataList","map","idx","TrackCard","artistName","useParams","play","useOutletContext","useSearchMusicQuery","skip","data","isError","error","isLoading","useError","style","margin","tracks","hits"],"sourceRoot":""}