{"version":3,"file":"static/js/230.32c2cfb8.chunk.js","mappings":"2IACA,MAAuB,wBAAvB,EAAsD,wB,UCStD,EARkB,SAAC,GAAmC,IAAD,IAAhCA,KAAAA,OAAgC,MAAzB,mBAAyB,EACnD,OACE,gBAAKC,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,SAAuBF,Q,mECJ7B,GAAgB,KAAO,6B,UCcvB,EAZsB,SAAC,GAA0B,IAAxBG,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACjC,OACE,eAAIH,UAAWC,EAAAA,KAAf,SACGC,EAASE,KAAI,SAACC,EAAOC,GAAR,OACZ,eAAcN,UAAWC,EAAAA,KAAzB,UACE,SAACM,EAAA,EAAD,CAAWF,MAAOA,EAAOF,OAAQA,KAD1BG,U,oHCNjB,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAyF,4BAAzF,EAAgI,4BAAhI,EAAoK,yBAApK,EAAwM,4B,UC6CxM,EArCkB,SAAC,GAA2E,IAAD,MAAxED,MAAcG,EAA0D,EAA/DC,IAAcC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,QAAWV,EAAa,EAAbA,OACxEW,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAiBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC7BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAO,OAAGR,QAAH,IAAGA,GAAH,UAAGA,EAAU,UAAb,aAAG,EAAcS,OAa9B,OACE,iBAAKtB,UAAWC,EAAhB,WACE,UAAC,KAAD,CAAMsB,GAAE,kBAAaf,GAAWR,UAAWC,EAA3C,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKuB,IAAG,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAQa,SAAUC,IAAKf,OAEnC,cAAGX,UAAWC,EAAd,SAAwBS,QAE1B,gBAAKV,UAAWC,EAAY0B,QAAS,kBAnBX,SAAAnB,GACxBA,IAAYS,EAIZT,IAAYS,GACdd,IAJAgB,GAASS,EAAAA,EAAAA,IAAapB,IAiBqBqB,CAAsBrB,IAAjE,SACGM,GAAaN,IAAYS,GAAiB,SAAC,KAAD,CAAWa,KAAM,MAAS,SAAC,KAAD,CAAUA,KAAM,QAGvF,SAAC,KAAD,CAAMP,GAAE,mBAAcF,GAAtB,UACE,cAAGrB,UAAWC,EAAd,SAA2BU,W,4FC1BnC,UAPe,WACb,IAAMoB,GAAahB,EAAAA,EAAAA,IAAYiB,EAAAA,IACvBC,GAASC,EAAAA,EAAAA,MAATD,KAER,OAAOF,EAAWI,OAAS,GAAI,SAAC,IAAD,CAAehC,OAAQ8B,EAAM/B,SAAU6B,EAAWK,MAAM,EAAG,OAAU,SAAC,IAAD","sources":["webpack://music-app/./src/components/EmptyPage/EmptyPage.module.scss?e11e","components/EmptyPage/EmptyPage.jsx","webpack://music-app/./src/components/MainTrackList/MainTrackList.module.scss?7956","components/MainTrackList/MainTrackList.jsx","webpack://music-app/./src/components/TrackCard/TrackCard.module.scss?1c8b","components/TrackCard/TrackCard.jsx","pages/Recent.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"EmptyPage_page__7lpVH\",\"text\":\"EmptyPage_text__6YXrX\"};","import s from './EmptyPage.module.scss';\n\nconst EmptyPage = ({ text = 'Nothing here yet' }) => {\n  return (\n    <div className={s.page}>\n      <p className={s.text}>{text}</p>\n    </div>\n  );\n};\n\nexport default EmptyPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MainTrackList_list__BeFvD\"};","import TrackCard from 'components/TrackCard';\nimport s from './MainTrackList.module.scss';\n\nconst MainTrackList = ({ dataList, onPlay }) => {\n  return (\n    <ul className={s.list}>\n      {dataList.map((track, idx) => (\n        <li key={idx} className={s.item}>\n          <TrackCard track={track} onPlay={onPlay} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MainTrackList;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"TrackCard_card__u0rZs\",\"link\":\"TrackCard_link__HD5bn\",\"playIcon\":\"TrackCard_playIcon__W+6pF\",\"coverart\":\"TrackCard_coverart__8QKKx\",\"title\":\"TrackCard_title__PC7to\",\"subtitle\":\"TrackCard_subtitle__safku\"};","import { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { currentTrack } from 'redux/music/music-slice';\nimport { currentTrackSelector } from 'redux/music/music-selectors';\nimport { isPlayingSelector } from 'redux/player/player-selectors';\nimport { PlayIcon, PauseIcon } from 'icons';\nimport s from './TrackCard.module.scss';\n\nconst TrackCard = ({ track: { key: trackId, title, subtitle, images, artists }, onPlay }) => {\n  const isPlaying = useSelector(isPlayingSelector);\n  const currentTrackId = useSelector(currentTrackSelector);\n  const dispatch = useDispatch();\n\n  const aristId = artists?.[0]?.adamid;\n\n  const handleButtonPlayClick = trackId => {\n    if (trackId !== currentTrackId) {\n      dispatch(currentTrack(trackId));\n      return;\n    }\n    if (trackId === currentTrackId) {\n      onPlay();\n      return;\n    }\n  };\n\n  return (\n    <div className={s.card}>\n      <Link to={`/tracks/${trackId}`} className={s.link}>\n        <div className={s.coverart}>\n          <img src={images?.coverart} alt={subtitle} />\n        </div>\n        <p className={s.title}>{title}</p>\n      </Link>\n      <div className={s.playIcon} onClick={() => handleButtonPlayClick(trackId)}>\n        {isPlaying && trackId === currentTrackId ? <PauseIcon size={16} /> : <PlayIcon size={16} />}\n      </div>\n\n      <Link to={`/artists/${aristId}`}>\n        <p className={s.subtitle}>{subtitle}</p>\n      </Link>\n    </div>\n  );\n};\n\nexport default TrackCard;\n","import { useSelector } from 'react-redux';\nimport { useOutletContext } from 'react-router-dom';\n\nimport { recentListSelector } from 'redux/music/music-selectors';\nimport MainTrackList from 'components/MainTrackList';\nimport EmptyPage from 'components/EmptyPage';\n\nconst Recent = () => {\n  const recentList = useSelector(recentListSelector);\n  const { play } = useOutletContext();\n\n  return recentList.length > 0 ? <MainTrackList onPlay={play} dataList={recentList.slice(0, 50)} /> : <EmptyPage />;\n};\n\nexport default Recent;\n"],"names":["text","className","s","dataList","onPlay","map","track","idx","TrackCard","trackId","key","title","subtitle","images","artists","isPlaying","useSelector","isPlayingSelector","currentTrackId","currentTrackSelector","dispatch","useDispatch","aristId","adamid","to","src","coverart","alt","onClick","currentTrack","handleButtonPlayClick","size","recentList","recentListSelector","play","useOutletContext","length","slice"],"sourceRoot":""}