{"version":3,"file":"static/js/123.faf05378.chunk.js","mappings":"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","sources":["webpack://music-app/./src/components/MainTrackList/MainTrackList.module.scss?7956","components/MainTrackList/MainTrackList.jsx","webpack://music-app/./src/components/TrackCard/TrackCard.module.scss?1c8b","components/TrackCard/TrackCard.jsx","icons/ShowMoreIcon.js","webpack://music-app/./src/components/ShortTracksList/ShortTracksList.module.scss?5c4d","components/ShortTracksList/ShortTracksList.jsx","pages/GenresPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MainTrackList_list__BeFvD\"};","import TrackCard from 'components/TrackCard';\nimport s from './MainTrackList.module.scss';\n\nconst MainTrackList = ({ dataList, onPlay }) => {\n  return (\n    <ul className={s.list}>\n      {dataList.map((track, idx) => (\n        <li key={idx} className={s.item}>\n          <TrackCard track={track} onPlay={onPlay} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MainTrackList;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"TrackCard_card__u0rZs\",\"link\":\"TrackCard_link__HD5bn\",\"playIcon\":\"TrackCard_playIcon__W+6pF\",\"coverart\":\"TrackCard_coverart__8QKKx\",\"title\":\"TrackCard_title__PC7to\",\"subtitle\":\"TrackCard_subtitle__safku\"};","import { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { currentTrack } from 'redux/music/music-slice';\nimport { currentTrackSelector } from 'redux/music/music-selectors';\nimport { isPlayingSelector } from 'redux/player/player-selectors';\nimport { PlayIcon, PauseIcon } from 'icons';\nimport s from './TrackCard.module.scss';\n\nconst TrackCard = ({ track: { key: trackId, title, subtitle, images, artists }, onPlay }) => {\n  const isPlaying = useSelector(isPlayingSelector);\n  const currentTrackId = useSelector(currentTrackSelector);\n  const dispatch = useDispatch();\n\n  const aristId = artists?.[0]?.adamid;\n\n  const handleButtonPlayClick = trackId => {\n    if (trackId !== currentTrackId) {\n      dispatch(currentTrack(trackId));\n      return;\n    }\n    if (trackId === currentTrackId) {\n      onPlay();\n      return;\n    }\n  };\n\n  return (\n    <div className={s.card}>\n      <Link to={`/tracks/${trackId}`} className={s.link}>\n        <div className={s.coverart}>\n          <img src={images?.coverart} alt={subtitle} />\n        </div>\n        <p className={s.title}>{title}</p>\n      </Link>\n      <div className={s.playIcon} onClick={() => handleButtonPlayClick(trackId)}>\n        {isPlaying && trackId === currentTrackId ? <PauseIcon size={16} /> : <PlayIcon size={16} />}\n      </div>\n\n      <Link to={`/artists/${aristId}`}>\n        <p className={s.subtitle}>{subtitle}</p>\n      </Link>\n    </div>\n  );\n};\n\nexport default TrackCard;\n","export const ShowMoreIcon = ({ size = 10, strokeWidth = 4, color = 'currentColor', ...props }) => (\n  <svg\n    width={size}\n    height={size}\n    fill=\"none\"\n    stroke={color}\n    strokeLinecap=\"round\"\n    strokeWidth={strokeWidth}\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path d=\"M10.293 4.793c.78-1.277 2.634-1.277 3.414 0l7.433 12.164C21.955 18.29 20.996 20 19.434 20H4.566c-1.562 0-2.52-1.71-1.706-3.043l7.433-12.164Z\" />\n  </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ShortTracksList_list__I+0tM\",\"listWrapper\":\"ShortTracksList_listWrapper__vUi+k\",\"musicWrapper\":\"ShortTracksList_musicWrapper__GiP5c\",\"textWrapper\":\"ShortTracksList_textWrapper__5W7iB\",\"title\":\"ShortTracksList_title__upxa-\",\"text\":\"ShortTracksList_text__Klcp1\"};","import { useDispatch } from 'react-redux';\n\nimport { useGetChartByGenreQuery } from 'redux/music/services/audio-api';\nimport { currentGenre } from 'redux/music/music-slice';\nimport TrackCard from 'components/TrackCard';\nimport { useError } from 'hooks';\nimport { ShowMoreIcon } from 'icons/ShowMoreIcon';\nimport s from './ShortTracksList.module.scss';\n\nconst ShortTracksList = ({ option, onPlay }) => {\n  const dispatch = useDispatch();\n  const { data, isError, error } = useGetChartByGenreQuery(option.value);\n  useError(error);\n\n  return (\n    !isError && (\n      <div className={s.listWrapper}>\n        <div className={s.textWrapper}>\n          <span className={s.title}>{option.title}</span>\n          <span className={s.text} onClick={() => dispatch(currentGenre(option))}>\n            See all\n            <ShowMoreIcon />\n          </span>\n        </div>\n        <div className={s.musicWrapper}>\n          <ul className={s.list}>\n            {data?.slice(0, 8).map((track, idx) => (\n              <li key={idx} className={s.item}>\n                <TrackCard track={track} onPlay={onPlay} />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default ShortTracksList;\n","import { useSelector } from 'react-redux';\nimport { useOutletContext } from 'react-router-dom';\n\nimport ShortTracksList from 'components/ShortTracksList';\nimport MainTrackList from 'components/MainTrackList';\nimport { currentGenreSelector } from 'redux/music/music-selectors';\nimport { Astronaut } from 'components/Loader';\nimport { genres } from 'utils';\nimport { useGetChartByGenreQuery } from 'redux/music/services/audio-api';\nimport { useError } from 'hooks';\n\nconst GenresPage = () => {\n  const { value } = useSelector(currentGenreSelector);\n  const { play } = useOutletContext();\n  const { data, isLoading, isError, error } = useGetChartByGenreQuery(value, {\n    skip: !value,\n  });\n  useError(error);\n\n  return !isError && isLoading ? (\n    <Astronaut size={350} style={{ margin: '0 auto' }} />\n  ) : value ? (\n    data && <MainTrackList dataList={data} onPlay={play} />\n  ) : (\n    <ul>\n      {genres.slice(1, 4).map((option, idx) => (\n        <li key={idx}>\n          <ShortTracksList onPlay={play} option={option} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default GenresPage;\n"],"names":["dataList","onPlay","className","s","map","track","idx","TrackCard","trackId","key","title","subtitle","images","artists","isPlaying","useSelector","isPlayingSelector","currentTrackId","currentTrackSelector","dispatch","useDispatch","aristId","adamid","to","src","coverart","alt","onClick","currentTrack","handleButtonPlayClick","size","ShowMoreIcon","strokeWidth","color","props","width","height","fill","stroke","strokeLinecap","viewBox","xmlns","d","option","useGetChartByGenreQuery","value","data","isError","error","useError","currentGenre","slice","currentGenreSelector","play","useOutletContext","skip","isLoading","style","margin","MainTrackList","genres"],"sourceRoot":""}